Undoing Things
At any stage, you may want to undo something. Here, we’ll review a few basic
tools for undoing changes that you’ve made. Be careful, because you can’t al-
ways undo some of these undos. This is one of the few areas in Git where you
may lose some work if you do it wrong.
One of the common undos takes place when you commit too early and pos-
sibly forget to add some files, or you mess up your commit message. If you want
to try that commit again, you can run commit with the --amend option

$ git commit --amend

This command takes your staging area and uses it for the commit. If you’ve
made no changes since your last commit (for instance, you run this command
immediately after your previous commit), then your snapshot will look exactly
the same, and all you’ll change is your commit message.
The same commit-message editor fires up, but it already contains the mes-
sage of your previous commit. You can edit the message the same as always,
but it overwrites your previous commit.
As an example, if you commit and then realize you forgot to stage the
changes in a file you wanted to add to this commit, you can do something like
this:

$ git commit -m 'initial commit'
$ git add forgotten_file
$ git commit --amend

You end up with a single commit – the second commit replaces the results of
the first.
