If you want to skip the staging area, Git provides a simple shortcut.
Adding the -a option to the git commit command makes Git automatically
stage every file that is already tracked before doing the commit, letting you skip
the git add part:


$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes not staged for commit:
(use "git add <file>..." to update what will be committed)
(use "git checkout -- <file>..." to discard changes in working directory)
modified:
CONTRIBUTING.md
no changes added to commit (use "git add" and/or "git commit -a")
$ git commit -a -m 'added new benchmarks'
[master 83e38c7] added new benchmarks
1 file changed, 5 insertions(+), 0 deletions(-)


Notice how you don’t have to run git add on the CONTRIBUTING.md file in
this case before you commit. That’s because the -a flag includes all changed
files. This is convenient, but be careful; sometimes this flag will cause you to
include unwanted changes.
