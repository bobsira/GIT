Limiting Log Output
In addition to output-formatting options, git log takes a number of useful
limiting options – that is, options that let you show only a subset of commits.
You’ve seen one such option already – the -2 option, which show only the last
two commits. In fact, you can do -<n> , where n is any integer to show the last n
commits. In reality, you’re unlikely to use that often, because Git by default
pipes all output through a pager so you see only one page of log output at a
time.

However, the time-limiting options such as --since and --until are very
useful. For example, this command gets the list of commits made in the last two
weeks:

$ git log --since=2.weeks

This command works with lots of formats – you can specify a specific date
like "2008-01-15" , or a relative date such as "2 years 1 day 3 minutes
ago" .

You can also filter the list to commits that match some search criteria. The
--author option allows you to filter on a specific author, and the --grep op-
tion lets you search for keywords in the commit messages. (Note that if you
want to specify both author and grep options, you have to add --all-match or
the command will match commits with either.)

Another really helpful filter is the -S option which takes a string and only
shows the commits that introduced a change to the code that added or re-
moved that string. For instance, if you wanted to find the last commit that add-
ed or removed a reference to a specific function, you could call:

$ git log -Sfunction_name

The last really useful option to pass to git log as a filter is a path. If you
specify a directory or file name, you can limit the log output to commits that
introduced a change to those files. This is always the last option and is general-
ly preceded by double dashes ( -- ) to separate the paths from the options.
